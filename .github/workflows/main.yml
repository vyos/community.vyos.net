# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ production ]
  pull_request:
    branches: [ production ]
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:
  workflow_call:
    secrets:
      NETLIFY_SITE_NAME:
        required: true
      NETLIFY_TOKEN:
        required: true
      SOUPAULT_PROFILE:
        required: true
      GH_ACCESS_TOKEN:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # For the main branch, this job should use the staging environment
    environment: production

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
      with:
        repository: vyos/community.vyos.net
        ref: production

    - name: Install build dependencies from the repos
      run: |
        echo Installing build dependencies
        sudo apt-get update
        sudo apt-get -y install cmark make npm
        sudo npm install -g sass@1.32.8
        # PyGitHub changes its API recently, distros use older versions,
        # so we install it from PyPI for now
        python -m venv .
        source ./bin/activate
        pip install pygithub jinja2

    - name: Install soupault
      env:
        SOUPAULT_VERSION: 3.2.0
      run: |
        echo Downloading and unpacking soupault
        wget https://github.com/dmbaturin/soupault/releases/download/$SOUPAULT_VERSION/soupault-$SOUPAULT_VERSION-linux-x86_64.tar.gz
        tar xvf soupault-$SOUPAULT_VERSION-linux-x86_64.tar.gz
        sudo mv -v ./soupault-$SOUPAULT_VERSION-linux-x86_64/soupault /usr/bin/

    - name: Build the site
      env:
        GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        # SOUPAULT_PROFILE is "staging" for the main branch,
        # it enabled a preview version warning.
        # The "live" profile simply enabled listing nightly builds
        SOUPAULT_OPTS: "--profile ${{ secrets.SOUPAULT_PROFILE }} --profile live"
      run: |
        source ./bin/activate
        make all

    - name: Deploy to Netlify
      env:
        NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
        NETLIFY_SITE_NAME: ${{ secrets.NETLIFY_SITE_NAME }}
      run: |
        zip -r website.zip build/
        curl --show-error --fail -H "Content-Type: application/zip" -H "Authorization: Bearer $NETLIFY_TOKEN" --data-binary "@website.zip" https://api.netlify.com/api/v1/sites/$NETLIFY_SITE_NAME/deploys
